<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html">

<h:head>
    <style>
        :root {
            --background: #1a1a2e;
            --color: #ffffff;
            --primary-color: #0f3460;
        }

        * {
            box-sizing: border-box;
        }

        html {
            scroll-behavior: smooth;
            height: 100%;
        }

        body {
            margin: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
            background: var(--background);
            color: var(--color);
            letter-spacing: 1px;
            transition: background 0.2s ease;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        a {
            text-decoration: none;
            color: var(--color);
        }

        h1 {
            font-size: 2.5rem;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: auto;
            position: relative;
        }

        .login-container {
            width: 22.2rem;
            position: relative; /* Ensure the circle positioning works correctly */
        }

        .form-container {
            border: 1px solid hsla(0, 0%, 65%, 0.158);
            box-shadow: 0 0 36px 1px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            backdrop-filter: blur(20px);
            z-index: 99;
            padding: 2rem;
        }

        .login-container form input {
            display: block;
            padding: 14.5px;
            width: 100%;
            margin: 1rem 0;
            color: var(--color);
            outline: none;
            background-color: rgba(145, 145, 145, 0.12);
            border: none;
            border-radius: 5px;
            font-weight: 500;
            letter-spacing: 0.8px;
            font-size: 15px;
            backdrop-filter: blur(15px);
        }

        .login-container form input:focus {
            box-shadow: 0 0 16px 1px rgba(0, 0, 0, 0.2);
            animation: wobble 0.3s ease-in;
        }

        .button-group {
            display: flex;
            justify-content: space-between;
            gap: 10px;
            margin-top: 1rem;
        }

        .login-container form button {
            background-color: var(--primary-color);
            color: var(--color);
            padding: 13px;
            border-radius: 5px;
            outline: none;
            font-size: 18px;
            letter-spacing: 1.5px;
            font-weight: bold;
            width: 48%;
            cursor: pointer;
            transition: all 0.1s ease-in-out;
            border: none;
            margin-bottom: 2rem;
        }

        .login-container form button:hover {
            box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.15);
            transform: scale(1.02);
        }
        .circle {
    width: 8rem;
    height: 8rem;
    background: var(--primary-color);
    border-radius: 50%;
    position: absolute;
    z-index: 2;
}

.circle-one {
    top: -2rem;
    left: -2rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.home-button {
    background-color: var(--color);
    color: var(--primary-color);
    padding: 10px;
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    font-size: 1.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 3;
}

.home-button:hover {
    background-color: var(--primary-color);
    color: var(--color);
    transform: scale(1.1);
}

.login-container {
    width: 22.2rem;
    position: relative;
}

.form-container {
    position: relative;
    z-index: 1;
}

      

        .illustration {
            position: absolute;
            top: -14%;
            right: -2px;
            width: 90%;
        }

        .opacity {
            opacity: 0.6;
        }

        .theme-btn-container {
            position: absolute;
            left: 0;
            bottom: 2rem;
        }

        .theme-btn {
            cursor: pointer;
            transition: all 0.3s ease-in;
        }

        .theme-btn:hover {
            width: 40px !important;
        }

        @keyframes wobble {
            0% {
                transform: scale(1.025);
            }
            25% {
                transform: scale(1);
            }
            75% {
                transform: scale(1.025);
            }
            100% {
                transform: scale(1);
            }
        }
    </style>

    <title>Login</title>
</h:head>

<body>
    <section class="container">
        <div class="login-container">
            <div class="circle circle-one">
                <a href="index.jsf" class="home-button">üè†Home</a>
            </div>
            <div class="form-container">
                <img src="https://raw.githubusercontent.com/hicodersofficial/glassmorphism-login-form/master/assets/illustration.png" alt="illustration" class="illustration" />

                <h1 class="opacity">LOGIN</h1>
                <center>
                    <h:form>
                        <h:panelGrid columns="1" cellpadding="5" styleClass="panelGrid">
                            <div class="form-field">
                                <h:outputLabel for="username" value="Enter Username"/>
                                <h:inputText id="username" validatorMessage="Username length must be in between 5 and 30" value="#{hr.username}">
                                    <f:validateLength minimum="5" maximum="30"/>
                                </h:inputText>
                                <h:message for="username" styleClass="error-message"/>
                            </div>

                            <div class="form-field">
                                <h:outputLabel for="password" value="Enter Password"/>
                                <h:inputSecret id="password" validatorMessage="Password length must be in between 5 and 30" value="#{hr.password}">
                                    <f:validateLength minimum="5" maximum="30"/>
                                </h:inputSecret>
                                <h:message for="password" styleClass="error-message"/>
                            </div>

                            <div class="form-field button-group">
                                <h:commandButton id="login" styleClass="button" value="Login" action="#{hr.validatehrlogin()}"/>
                                <h:message for="login"/>
                            </div>
                        </h:panelGrid>
                    </h:form>
                </center>
            </div>
            <div class="circle circle-two"></div>
        </div>
        <div class="theme-btn-container"></div>
    </section>

    <script>
        const themes = [
            {
                background: "#1A1A2E",
                color: "#FFFFFF",
                primaryColor: "#0F3460"
            },
            {
                background: "#461220",
                color: "#FFFFFF",
                primaryColor: "#E94560"
            },
            {
                background: "#192A51",
                color: "#FFFFFF",
                primaryColor: "#967AA1"
            },
            {
                background: "#F7B267",
                color: "#000000",
                primaryColor: "#F4845F"
            },
            {
                background: "#F25F5C",
                color: "#000000",
                primaryColor: "#642B36"
            },
            {
                background: "#231F20",
                color: "#FFF",
                primaryColor: "#BB4430"
            }
        ];

        const setTheme = (theme) => {
            const root = document.querySelector(":root");
            root.style.setProperty("--background", theme.background);
            root.style.setProperty("--color", theme.color);
            root.style.setProperty("--primary-color", theme.primaryColor);
        };

        const displayThemeButtons = () => {
            const btnContainer = document.querySelector(".theme-btn-container");
            themes.forEach((theme) => {
                const div = document.createElement("div");
                div.className = "theme-btn";
                div.style.cssText = `background: ${theme.background}; width: 25px; height: 25px`;
                btnContainer.appendChild(div);
                div.addEventListener("click", () => setTheme(theme));
            });
        };

        displayThemeButtons();
    </script>
</body>
</html>
